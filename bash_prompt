#!/bin/bash
# @file ~/.bash_prompt
# @brief sets my custom bash prompt
# @author Oscar Bezi (oscar@bezi.io)
# @since 5 June 2014
#===============================================================================

# Prints out the prompt
function bash_prompt {
    if [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1; then
        if git diff --quiet; then
            # clean repo
            GIT_COLOR="${BGreen}"
        else
            #dirty repo
            GIT_COLOR="${BRed}"
        fi
        GIT_REPO="$(git rev-parse --show-toplevel)"
        GIT_REPO="${GIT_REPO##*/}"
        GIT_BRANCH="$(git rev-parse --abbrev-ref HEAD)";
        GIT="${BWhite}(${GIT_COLOR}${GIT_REPO}${BWhite} → ${GIT_COLOR}${GIT_BRANCH}${BWhite}) "
    fi

    if [[ "${1}" != "0" ]]; then
        STATUS="${BRed}✗ ";
    fi

    if [ "${PWD}" != "${HOME}" ]; then
        LOCATION="${BCyan}> ${BGreen}${PWD##*/} ";
    fi

    STOPPED=`jobs | grep "Stopped" | wc -l`;
    if [[ "${STOPPED}" != "0" ]]; then
        NUM=${STOPPED};
        STOPPED="${BWhite}[${BCyan}${NUM}${BWhite}]";
    else 
        STOPPED="";
    fi

    PROMPT="${STATUS}${STOPPED}${GIT}"
    PROMPT="${PROMPT}${BWhite}[${BYellow}${HOSTNAME}${BWhite}] "
    PROMPT="${PROMPT}${LOCATION}${BCyan}λ ${Color_Off}";

    # overwrite instances of .github.io with character, makes it shorter
    PROMPT="${PROMPT//.github.io/.ϼ}";
    printf "$PROMPT";
}

# it's a prompt command to make it execute properly every time
PROMPT_COMMAND='PS1="$(bash_prompt $?)"';
